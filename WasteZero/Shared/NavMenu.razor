<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <div class="flex-column">
            <span class="material-icons">warehouse</span><a class="navbar-brand" href=""> &nbsp WasteZero</a>
        </div>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Dashboard">
                <span class="material-icons">dashboard</span>
                @if (!@IconMenuActive) {
                    <label> &nbsp Dashboard</label>
                }
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="material-icons">food_bank</span>
                @if (!@IconMenuActive){
                    <label> &nbsp Warehouse</label>
                }
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ProductTypes">
                <span class="material-icons" aria-hidden="true">checklist</span>
                @if (!@IconMenuActive) {
                    <label> &nbsp Types</label>
                }
            </NavLink>
        </div>
    </nav>
</div>

@code {
    //bool to send to MainLayout for shrinking sidebar and showing/hide menu text
    private bool IconMenuActive { get; set; } = false;

    //EventCallback for sending bool to MainLayout
    [Parameter]
    public EventCallback<bool> ShowIconMenu { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() {
        collapseNavMenu = !collapseNavMenu;
    }

    //Method to toggle IconMenuActive bool and send bool via EventCallback
    private async Task ToggleIconMenu() {
        IconMenuActive = false;
        await ShowIconMenu.InvokeAsync(IconMenuActive);
    }
}
